name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ec2-user/app"
          strip_components: 2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 환경 변수 설정
            sudo tee /home/ec2-user/app/application-env.sh << EOF
            #!/bin/bash
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_USERNAME=${{ secrets.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            EOF
            
            sudo chmod +x /home/ec2-user/app/application-env.sh
            
            # 서비스 파일 설정
            sudo tee /etc/systemd/system/spring-app.service << EOF
            [Unit]
            Description=Hidden Treasure Hunt Application
            After=network.target
            
            [Service]
            Type=simple
            User=ec2-user
            WorkingDirectory=/home/ec2-user/app
            EnvironmentFile=/home/ec2-user/app/application-env.sh
            ExecStart=/usr/bin/java -jar /home/ec2-user/app/*.jar
            Restart=always
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            sudo systemctl daemon-reload
            sudo systemctl enable spring-app
            sudo systemctl restart spring-app
            
            # 서비스 상태 확인 및 로그 출력
            sudo systemctl status spring-app
            journalctl -u spring-app -n 50 --no-pager